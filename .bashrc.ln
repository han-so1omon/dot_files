# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

###################################################################################
# Define environment variables
newentry=:/usr/lib/ccache:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/eric/Documents/ElkaControlProject/ElkaControl/run/linux:/home/eric/Documents/Experiments/go_code/bin:/home/eric/Programs/ninja:/home/eric/jsbsim/src:/home/eric/ardupilot/Tools/autotest
for el in ${newentry//:/ }; do
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
done

export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export HOME=/home/eric
export TMP=/tmp/user/1000
export DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-tlj1VYwgOY
export TMUX_PLUGIN_MANAGER_PATH=/home/eric/.tmux/plugins/
#export PKG_CONFIG_PATH=/opt/ros/indigo/lib/pkgconfig
export PROGRAMS=${HOME}/Programs

# Set up my objects directory
if [ -d /home/eric/Objs ]; then
  export ERIC_OBJS_DIR=/home/eric/Objs
fi

# Set up my libraries path
if [ -d /home/eric/Libs ]; then
  export MY_LIBS_PATH=/home/eric/Libs
  case ":$LD_LIBRARY_PATH:" in
    *":$MY_LIBS_PATH:"*) :;;
    *) export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$MY_LIBS_PATH";;
  esac
fi

# Set up my includes path
if [ -d /home/eric/Includes ]; then
  export MY_INCLUDES_PATH=/home/eric/Includes
fi

# Set up ros
#if [ -d /opt/ros/kinetic ]; then
  #. /opt/ros/kinetic/setup.bash
#fi

# Set up cognifli
#if [ -d /home/eric/Programs/cognifli/ ]; then
#  source /home/eric/Programs/cognifli/devel/setup.bash # Generated by COGNIFLI-INSTALL-PY
#  export PATH=/home/eric/Programs/cognifli/contrib/launchers_gen/:$PATH # Generated by COGNIFLI-INSTALL-PY
#fi

# Set up catkin_ws
#if [ -d /home/eric/Programs/catkin_ws/devel ]; then
#  export CATKIN_HOME=/home/eric/Programs/catkin_ws
#  source /home/eric/Programs/catkin_ws/devel/setup.bash
#fi

# Set up catkin_ws
#if [ -d /home/eric/Programs/snapdragon_ws/devel ]; then
  #export CATKIN_HOME=/home/eric/Programs/snapdragon_ws
  #source /home/eric/Programs/snapdragon_ws/devel/setup.bash
#fi

# Set up snapdragon env
if [ -d /home/eric/Programs/Snapdragon ]; then
  export SNAPDRAGON_HOME=/home/eric/Programs/Snapdragon
fi

if [ -d /home/eric/Programs/Snapdragon/Tests ]; then
  export SNAPDRAGON_TESTS=/home/eric/Programs/Snapdragon/Tests
fi

if [ -d /home/eric/Programs/Snapdragon/Tests ]; then
  export SNAPDRAGON_SETUP=/home/eric/Programs/Snapdragon/SnapdragonSetup
fi

if [ -d $SNAPDRAGON_SETUP/libs ]; then
  export SNAPDRAGON_LINK_LIBS_DIR=$SNAPDRAGON_SETUP/libs
fi

if [ -d $SNAPDRAGON_SETUP/incs ]; then
  export SNAPDRAGON_INCS=$SNAPDRAGON_SETUP/incs
fi

# Add gazebo models to GAZEBO_MODEL_PATH
if [ -d /home/eric/Libraries/gazebo_models ]; then
  export GAZEBO_MODEL_PATH=${GAZEBO_MODEL_PATH}:/home/eric/Libraries/gazebo_models
fi

# Add tum_simulator to ROS package path
#if [ -d /home/eric/Programs/tum_simulator ]; then
  #export ROS_PACKAGE_PATH="$ROS_PACKAGE_PATH:/home/eric/Programs/tum_simulator"
#fi

# Setup TerpCopter
if [ -d /home/eric/Programs/catkin_ws/src/TerpCopter ]; then
  export TERPCOPTER_DIR="/home/eric/Programs/catkin_ws/src/TerpCopter/"
  if [ -d $TERPCOPTER_DIR/tools ]; then
    export TERPCOPTER_TOOLS="$TERPCOPTER_DIR/tools/"
  fi
fi

# Set ROS_IP
export ROS_IP=$(hostname -I | awk '{print $1}')

if [ "x`echo $PATH | grep '/opt/cmake-3.4.3-Linux-x86_64/bin'`" = "x" ]; then
  el=/opt/cmake-3.4.3-Linux-x86_64/bin
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

if [ -d /home/eric/Programs/ ]; then
  export HEXAGON_INSTALL_HOME="/home/eric/Programs"
fi

if [ -d /opt/qrlSDK/ ]; then
  export QRL_INSTALL_ROOT="/opt/qrlSDK"
fi

if [ -d ${HEXAGON_INSTALL_HOME}/Qualcomm/Hexagon_SDK/3.0 ]; then
  export HEXAGON_SDK_ROOT="${HEXAGON_INSTALL_HOME}/Qualcomm/Hexagon_SDK/3.0"
  el=$HEXAGON_SDK_ROOT/tools/libusb/
  case ":$LD_LIBRARY_PATH:" in
    *":$el:"*) :;;
    *) export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$el";;
  esac
fi

if [ -d ${HEXAGON_INSTALL_HOME}/Qualcomm/HEXAGON_Tools/7.2.12/Tools ]; then
   export HEXAGON_TOOLS_ROOT="${HEXAGON_INSTALL_HOME}/Qualcomm/HEXAGON_Tools/7.2.12/Tools"
fi
#if [ -d ${HEXAGON_INSTALL_HOME}/Qualcomm/HEXAGON_Tools/8.1.05/Tools ]; then
#   export HEXAGON_TOOLS_ROOT="${HEXAGON_INSTALL_HOME}/Qualcomm/HEXAGON_Tools/8.1.05/Tools"
#fi

# if [ -d ${HEXAGON_SDK_ROOT}/gcc-linaro-4.9-2014.11-x86_64_arm-linux-gnueabihf_linux/bin ]; then
#   [ `echo PATH | grep gcc-linaro-4\.[a-z0-9\.\_\-]*/bin` ] || \
#     export PATH="${HEXAGON_SDK_ROOT}/gcc-linaro-4.9-2014.11-x86_64_arm-linux-gnueabihf_linux/bin:$PATH"
# fi

if [ -d ${QRL_INSTALL_ROOT}/gcc-linaro-arm-linux-gnueabihf-4.8-2013.08_linux/bin ]; then
   [ `echo PATH | grep gcc-linaro-4\.[a-z0-9\.\_\-]*/bin` ] || \
     el="${QRL_INSTALL_ROOT}/gcc-linaro-arm-gnueabihf-4.8-2013.08_linux/bin"
    case ":$PATH:" in
      *":$el:"*) :;;
      *) export PATH="$PATH:$el";;
    esac
fi

#FIXME qrl 3.1.2 not working yet, but switch back when it is
if [ -d ${QRL_INSTALL_ROOT}/sysroots/eagle8074/ ]; then
  export HEXAGON_ARM_SYSROOT="${QRL_INSTALL_ROOT}/sysroots/eagle8074"
fi

# QCom flight controller 3.0 addon
if [ -d ${HOME}/Programs/Snapdragon/qualcomm_hexagon/qcom_flight_controller_hexagon_sdk_add_on ]; then
  export FC_ADDON="${HOME}/Programs/Snapdragon/qualcomm_hexagon/qcom_flight_controller_hexagon_sdk_add_on"
fi

# SoundwireServer
if [ -f ${HOME}/Programs/SoundWireServer/SoundWireServer ]; then
  el="${HOME}/Programs/SoundWireServer/SoundWireServer"
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

# bake for building ns3
if [ -d ${HOME}/Programs/bake ]; then
  export BAKE_HOME="${HOME}/Programs/bake"
  el="$BAKE_HOME"
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac

  newentry_python=$BAKE_HOME  
  for el in ${newentry_python//:/ }; do
    case ":$PYTHONPATH:" in
      *":$el:"*) :;;
    *) export PYTHONPATH="$PYTHONPATH:$el";;
    esac
  done
fi

# PX4 firmware home directory
if [ -d ${HOME}/Programs/px4/Firmware ]; then
  export PX4_FIRMWARE="${HOME}/Programs/px4/Firmware"
  # Set BEBOP_IP
  export BEBOP_IP="192.168.42.1"
fi

# PX4 path directories
if [ -d ${PX4_FIRMWARE}/src/platforms ]; then
  el="${PX4_FIRMWARE}/src/platforms"
  case ":$PX4_PATH" in
    *":$el:"*) :;;
    *) export PX4_PATH="$PX4_PATH:$el";;
  esac
fi
if [ -d ${PX4_FIRMWARE}/src/include ]; then
  el="${PX4_FIRMWARE}/src/include"
  case ":$PX4_PATH" in
    *":$el:"*) :;;
    *) export PX4_PATH="$PX4_PATH:$el";;
  esac
fi
if [ -d ${PX4_FIRMWARE}/src/lib ]; then
  el="${PX4_FIRMWARE}/src/lib"
  case ":$PX4_PATH" in
    *":$el:"*) :;;
    *) export PX4_PATH="$PX4_PATH:$el";;
  esac
fi

# ELKA path directories
if [ -d ${HOME}/Programs/elka ]; then
  export ELKA_HOME="${HOME}/Programs/elka"
fi
if [ -d ${ELKA_HOME}/elka_firmware ]; then
  export ELKA_FIRMWARE="${ELKA_HOME}/elka_firmware/elka_firmware"
fi
if [ -d ${ELKA_HOME}/elka_comm ]; then
  export ELKA_COMM_DIR="${ELKA_HOME}/elka_comm"
fi
if [ -d ${ELKA_HOME}/elka_control ]; then
  export ELKA_CONTROL_DIR="${ELKA_HOME}/elka_control"
fi
if [ -d ${ELKA_HOME}/elka_data_collection ]; then
  export ELKA_DATA_COLLECTION_DIR="${ELKA_HOME}/elka_data_collection"
fi

# DSPAL path directory
if [ -d ${HOME}/Programs/Snapdragon/dspal ]; then
	export DSPAL_PATH="${HOME}/Programs/Snapdragon/dspal"
fi

if [ -d ${HOME}/Scripts ]; then
  el="${HOME}/Scripts"
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

if [ -f ${HOME}/Programs/waf-1.9.4/waf ]; then
  alias waf='${HOME}/Programs/waf-1.9.4/waf'
  el="${HOME}/Programs/waf-1.9.4"
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

if [ -d ${HOME}/Programs/raspi ]; then
  export RASPI_HOME="${HOME}/Programs/raspi"
fi

if [ -f /usr/lib/insserv/insserv ]; then
  el="/usr/lib/insserv"
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

if [ -d /opt/gradle/gradle-4.1/bin ]; then
  el="/opt/gradle/gradle-4.1/bin"
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

if [ -d /home/eric/Documents/School ]; then
  export SCHOOL_HOME="${HOME}/Documents/School"
fi

if [ -d /home/eric/Programs/vlfeat/vlfeat-0.9.20 ]; then
  export VLFEATROOT="${HOME}/Programs/vlfeat/vlfeat-0.9.20"
fi

# Add libraries necessary for matlab to LD_RUN_PATH
el="/usr/local/lib"
case ":$LD_RUN_PATH:" in
  *":$el:"*) :;;
  *) export LD_RUN_PATH="$LD_RUN_PATH:$el";;
esac
case ":$LD_LIBRARY_PATH:" in
  *":$el:"*) :;;
  *) export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$el";;
esac

# Julia
if [ -d ${PROGRAMS}/julia ]; then
  el=${PROGRAMS}/julia/bin
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

# QT5
if [ -d ${PROGRAMS}/Qt/Qt5.7.0 ]; then
  export QT_SELECT=qt5_manual_install
  el=${PROGRAMS}/Qt/Qt5.7.0/5.7/gcc_64
  case ":$CMAKE_PREFIX_PATH:" in
    *":$el:"*) :;;
    *) export CMAKE_PREFIX_PATH="$CMAKE_PREFIX_PATH:$el";;
  esac
fi

# Erlang
if [ -d ${PROGRAMS}/erlang/otp/bin ]; then
  el=${PROGRAMS}/erlang/otp/bin
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

# Elixir
if [ -d ${PROGRAMS}/elixir/bin ]; then
  el=${PROGRAMS}/elixir/bin
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

# Android platform tools
if [ -d ${PROGRAMS}/android/platform-tools ]; then
  el=${PROGRAMS}/android/platform-tools
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

# Golang
if [ -d ${PROGRAMS}/go ]; then
  export GOROOT=${PROGRAMS}/go
  el=${GOROOT}/bin
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

# Slowdrone
if [ -d ${PROGRAMS}/slow ]; then
  export SLOW_HOME=${PROGRAMS}/slow
  export SLOWDRONE_HOME=${SLOW_HOME}/drone
fi

if [ -d ${PROGRAMS}/gocode ]; then
  export GOPATH=${PROGRAMS}/gocode
  export GOBIN=${GOPATH}/bin
fi

# CppAD
if [ -d $MY_INCLUDES_PATH/CppAD/build/pkgconfig ]; then
   el=${MY_INCLUDES_PATH}/CppAD/build/pkgconfig
  case ":$PKG_CONFIG_PATH:" in
    *":$el:"*) :;;
    *) export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$el";;
  esac
 
fi

# CxxTest
if [ -d ${PROGRAMS}/cxxtest/bin ]; then
  el=${PROGRAMS}/cxxtest/bin
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi

# npm global
if [ -d ${HOME}/.npm-global ]; then
  el=${HOME}/.npm-global/bin
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi


# LV2 bundles
if [ -d ${PROGRAMS}/audio ]; then
  export LV2_PATH="$HOME/.lv2:/usr/local/lib/lv2:/usr/lib/lv2"
  el=${PROGRAMS}/audio
  case ":$LV2_PATH:" in
    *":$el:"*) :;;
    *) export LV2_PATH="$LV2_PATH:$el";;
  esac
fi

# Cuda 8
if [ -d /usr/local/cuda-8.0/bin ]; then
  el=/usr/local/cuda-8.0/bin
  case ":$PATH:" in
    *":$el:"*) :;;
    *) export PATH="$PATH:$el";;
  esac
fi



##########################################################################
# Define aliases

alias tmux='tmux -2'
alias UE4Editor='/home/eric/Programs/UnrealEngine/Engine/Binaries/Linux/UE4Editor'
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -alF'
alias ls='ls --color=auto'
alias opencv='~/Scripts/.compile_opencv.sh'
alias script_dir='( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )'
# Connect to desktop on Netgear6400 router via tmux/no tmux via ssh
alias erok_funk='ssh -p 34433 erok@69.143.200.105 -t tmux -2 a'
alias erok_funk_local='ssh -p 34433 erok@192.168.1.36 -t tmux -2 a'
alias erok_funx='ssh -p 34433 erok@69.143.200.105 -t -X tmux -2 a'
alias erok_funk_nt='ssh -p 34433 erok@69.143.200.105'
alias erok_funx_nt='ssh -p 34433 erok@69.143.200.105 -X'
# Script for comparing vicon data to rosbag data for snapdragon->elka
alias vicon_compare="python $SNAPDRAGON_HOME/utils/compare_vicon.py"
#alias source_kinetic="source /opt/ros/kinetic/setup.bash"
alias bs="source $HOME/.bashrc"

# Start matlab with software opengl rendering
alias matlab='matlab -softwareopengl'

#########################################################################
# Define macros
# FIXME use the following commented line in a script to find the script
# directory. Does not currently work as a macro/alias
# alias SCRIPT_DIR="(dirname $(readlink -e ${BASH_SOURCE}))"

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

export TERPCOPTER_IP=192.168.0.243
export MY_PC_IP=192.168.0.106


. /home/eric/Programs/torch/install/bin/torch-activate
